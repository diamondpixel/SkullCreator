plugins {
    id 'java-library'
    // Adds tasks to upload a deployment bundle to the new Central Portal
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    repositories {
        maven {
            url 'https://repo.papermc.io/repository/maven-public/'
        }
        mavenCentral()
    }

    java {
        toolchain.languageVersion.set(JavaLanguageVersion.of(8))
    }

    group = "io.github.diamondpixel"
    version = "3.1.0"

    if (project.name == "SkullCreatorAPI") {
        publishing {
            publications {
                create("maven", MavenPublication) {
                    from(components["java"])

                    pom {
                        name.set("skullcreator")
                        description.set("A library to create player skulls from usernames, UUIDs, base64, or URLs.")
                        url.set("https://github.com/diamondpixel/skullcreator")

                        licenses {
                            license {
                                name.set("MIT License") // Update if needed
                                url.set("https://opensource.org/licenses/MIT")
                            }
                        }

                        developers {
                            developer {
                                id.set("diamondpixel")
                                name.set("DiamondPixel") // Optional display name
                            }
                        }

                        scm {
                            connection.set("scm:git:https://github.com/diamondpixel/skullcreator.git")
                            developerConnection.set("scm:git:https://github.com/diamondpixel/skullcreator.git")
                            url.set("https://github.com/diamondpixel/skullcreator")
                        }
                    }
                }
            }

            // No direct repository; upload handled by nexusPublishing plugin
        }

        signing {
            // Sign artifacts using PGP key stored in GitHub Secrets (loaded as env vars)
            useInMemoryPgpKeys(
                System.getenv("GPG_PRIVATE_KEY"),
                System.getenv("GPG_PASSPHRASE")
            )
            sign(publishing.publications["maven"])
        }

        java {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

// Custom build output directories
project(":SkullCreatorAPI") {
    buildDir = "${rootDir}/build/API"
}

project(":SkullCreatorDemoPlugin") {
    buildDir = "${rootDir}/build/Demo"
}

// Configure Central Portal publishing once per root project
if (project == rootProject) {
    nexusPublishing {
        repositories {
            sonatype {
                // Point to the newer s01 host instead of default oss.sonatype.org
                nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
                snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
                username.set(System.getenv("SONATYPE_USER"))
                password.set(System.getenv("SONATYPE_TOKEN"))
            }
        }
    }
}
